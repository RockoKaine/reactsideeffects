{"ast":null,"code":"var _jsxFileName = \"/home/rocko/Documents/Code/reactStuff/react side effects/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AuthContext from './store/auth-context';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // the useEffect will only run if the dependancies change which sonce this one doesnt have any it\n  // only run at the beginning when the  app starts\n  useEffect(() => {\n    const loggedInData = localStorage.getItem('isLoggedIn');\n    if (loggedInData === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return (\n    /*#__PURE__*/\n    //  by wrapping with authContext it allows all children to have access to its goodies\n    // and because we are wrapping with authcontext we dont need to use fragments\n    // here we must also add value and set our isloggedin, otherwise the app will crash\n    // because we are using a provider and a default value in auth-context\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","loggedInData","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","Provider","value","children","isAuthenticated","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/rocko/Documents/Code/reactStuff/react side effects/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AuthContext from './store/auth-context';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n// the useEffect will only run if the dependancies change which sonce this one doesnt have any it\n// only run at the beginning when the  app starts\n  useEffect(()=>{\n\n    const loggedInData = localStorage.getItem('isLoggedIn');\n\n    if(loggedInData === \"1\"){\n  \n      setIsLoggedIn(true);\n    }\n  \n\n  }, [])\n\n \n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n\n    localStorage.removeItem('isLoggedIn')\n    setIsLoggedIn(false);\n  };\n\n  return (\n\n \n//  by wrapping with authContext it allows all children to have access to its goodies\n// and because we are wrapping with authcontext we dont need to use fragments\n// here we must also add value and set our isloggedin, otherwise the app will crash\n// because we are using a provider and a default value in auth-context\n\n      <AuthContext.Provider value={{ isLoggedIn: false }}>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACEC,SAAS,CAAC,MAAI;IAEZ,MAAMW,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEvD,IAAGF,YAAY,KAAK,GAAG,EAAC;MAEtBD,aAAa,CAAC,IAAI,CAAC;IACrB;EAGF,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAE1BN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED;IAAA;IAGF;IACA;IACA;IACA;IAEMJ,OAAA,CAACL,WAAW,CAACmB,QAAQ;MAACC,KAAK,EAAE;QAAEZ,UAAU,EAAE;MAAM,CAAE;MAAAa,QAAA,gBACnDhB,OAAA,CAACF,UAAU;QAACmB,eAAe,EAAEd,UAAW;QAACe,QAAQ,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEtB,OAAA;QAAAgB,QAAA,GACG,CAACb,UAAU,iBAAIH,OAAA,CAACJ,KAAK;UAAC2B,OAAO,EAAEf;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EAC/CnB,UAAU,iBAAIH,OAAA,CAACH,IAAI;UAACqB,QAAQ,EAAEN;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACgB;AAG7B;AAACpB,EAAA,CAjDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}