{"ast":null,"code":"var _jsxFileName = \"/home/rocko/Documents/Code/reactStuff/react side effects/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  //here useeffect will run now everytime the dependancies enteredEmail and enteredPassword \n  //are changed we could all setFormIsValid as well but with the useState react gaurantees \n  //that they will never change\n\n  //   useEffect(()=>{\n  // // we are making it so that we only check for validity after 500ms of not typing\n  // // and then we return clearTimeOut to reset the timer.\n\n  //     const identifier = setTimeout(()=>{\n  //       console.log('Chekcing Validity')\n  //       setFormIsValid(\n  //         enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //       );\n\n  //     }, 500);\n\n  //     return ()=>{\n  //       console.log('Clean Up');\n  //       clearTimeout(identifier);\n  //     };\n\n  //   }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.valuue,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"kQSb/Nt7l4OeYJGyLYHyj/KYl2k=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useReducer","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","Login","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","valuue","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/home/rocko/Documents/Code/reactStuff/react side effects/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action)=>{\n\n  if(action.type === 'USER_INPUT'){\n\n    return {value: action.val, isValid: action.val.includes('@')}\n\n  }\n\n  if(action.type === 'INPUT_BLUR'){\n     return {value: state.value, isValid: state.value.includes('@')}\n  }\n\n  return {value:'', isValid: false}\n}\n\n\nconst passwordReducer = (state, action)=>{\n\n}\n\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value:'', \n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  })\n\n  //here useeffect will run now everytime the dependancies enteredEmail and enteredPassword \n  //are changed we could all setFormIsValid as well but with the useState react gaurantees \n  //that they will never change\n\n//   useEffect(()=>{\n// // we are making it so that we only check for validity after 500ms of not typing\n// // and then we return clearTimeOut to reset the timer.\n\n//     const identifier = setTimeout(()=>{\n//       console.log('Chekcing Validity')\n//       setFormIsValid(\n//         enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//       );\n  \n//     }, 500);\n\n//     return ()=>{\n//       console.log('Clean Up');\n//       clearTimeout(identifier);\n//     };\n    \n\n\n//   }, [enteredEmail, enteredPassword])\n\n\n\n  const emailChangeHandler = (event) => {\n    \n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n\n    dispatchEmail({type: 'INPUT_BLUR'})\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n\n    dispatchPassword({type: 'INPUT_BLUR'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.valuue}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}